apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

//apply plugin: 'kotlin-kapt'

//apply plugin: 'realm-android'//数据库依赖


android {
    compileSdkVersion rootProject.ext.compile_sdk_version

    defaultConfig {
        applicationId "com.suncity.dailynotices"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        flavorDimensions "default"
        multiDexEnabled true
        renderscriptTargetApi 26
        renderscriptSupportModeEnabled true
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a'
    }

    signingConfigs {
        release {

        }
    }

    // 看看 signing.properties 文件是否存在，如果存在就读取其中的内容作为打包时的签名配置
    // 如果不存在就设置打包时不使用签名配置
    File propFile = file('noticesigning.properties')
    if (propFile.exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props.containsKey('RELEASE_STOREFILE') && props.containsKey('RELEASE_KEY_ALIAS') &&
                props.containsKey('RELEASE_KEY_PASSWORD') && props.containsKey('RELEASE_STOREPASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['RELEASE_STOREFILE'])
            android.signingConfigs.release.storePassword = props['RELEASE_STOREPASSWORD']
            android.signingConfigs.release.keyAlias = props['RELEASE_KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['RELEASE_KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            jni.srcDirs = []

            res.srcDirs = [
                    'src/main/res'
            ]
        }
    }

    //打包的时候会触发这个方法
    applicationVariants.all { variant ->
        // 如果打包的类型不是 debug，将进行以下两个操作
        // 在输出文件的时候对文件名进行重命名
        // 在打包完成之后，将 apk 复制到指定目录，并删除原目录的 apk
        if (variant.buildType.name != "debug") {
            variant.outputs.all {
                def time = new Date().format("MMddHHmm")
                outputFileName = "${variant.productFlavors[0].name.toUpperCase()}_" +
                        "${variant.buildType.name.toUpperCase()}_v${variant.versionName}_${time}.apk"
            }
            variant.assemble.doLast { assemble ->
                copy {
                    from variant.outputs*.outputFile
                    into "apks"
                }
                delete variant.outputs*.outputFile
            }
        }
    }

    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        abortOnError false
    }

    // 定义不同版本的环境变量，可以通过 manifestPlaceholders 导入到 manifest 文件
    //默认环境
    def generalEnv = [
            ENV_PROTOCOL    : "https",
            ENV_HOST        : "",
            ENV_AVOS_APP_ID : "4xblPFNlqanJOGa1MtjJmbiP-gzGzoHsz",
            ENV_AVOS_APP_KEY: "kWb2PAxe4WCJzpSTRoanAG87"
    ]

    //定义不同的打包版本类型
    productFlavors {
        // 读取 version.properties 文件，得到当前配置的版本号
        Properties properties = new Properties()
        InputStream inputStream = project.rootProject.file('version.properties').newDataInputStream()
        properties.load(inputStream)

        general {
            manifestPlaceholders = generalEnv
            versionCode = properties.getProperty("VERSION_CODE").toInteger()
            versionName = properties.getProperty("VERSION_NAME")

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }

        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'junit:junit:4.12'
    //    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //    implementation "com.android.support:appcompat-v7:$android_support_version"

    //    implementation "com.android.support:recyclerview-v7:$android_support_version"

    //    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // Fresco 图片加载库

    //    implementation "com.facebook.fresco:fresco:$fresco_version"

    //    implementation "com.facebook.fresco:animated-gif:$frescogif_version"

    //    implementation "me.relex:photodraweeview:1.1.3"//大图预览

    //leanCloud

    //    implementation "cn.leancloud.android:avoscloud-sdk:$avoscloud_version"

    // 推送与即时通讯需要的包

    //    implementation("cn.leancloud.android:avoscloud-push:$avoscloud_mix_version") {

    //        transitive = true

    //    }

    // LeanCloud 应用内搜索包
    implementation "cn.leancloud.android:avoscloud-search:$avoscloud_mix_version"

    //权限管理

    //    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.android.support:design:28.0.0'

    //添加自定义刷新，自定义header使用
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-31'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-31'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation project(':leancloudchatkit')

    //兼容图片选择库的适配器
    implementation 'com.yuyh.easyadapter:library:1.1.0'

}
